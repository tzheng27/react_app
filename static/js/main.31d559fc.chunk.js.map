{"version":3,"sources":["components/NavBar.js","components/SideBar.js","components/MainContainer.js","components/ProjectsPanel.js","components/TeamsPanel.js","components/EmployeesPanel.js","components/Overview.js","components/Projects.js","components/Teams.js","components/Employees.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","href","this","props","title","Component","SideBar","highlight","MainContainer","components_NavBar","navbar","components_SideBar","sidebar","children","ProjectsPanel","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","projects","_this2","fetch","dataSource","then","res","json","data","setState","catch","err","console","log","getProjNum","project","ProjectName","match","map","Number","sort","b","key","_id","moment","diff","ProjectStartDate","react_router_dom","to","TeamsPanel","teams","getTeamNum","team","TeamName","Employees","length","EmployeesPanel","employees","FirstName","employee","LastName","Position","PositionName","Overview","components_MainContainer","components_ProjectsPanel","components_TeamsPanel","components_EmployeesPanel","Projects","ProjectDescription","format","ProjectEndDate","Teams","TeamLead","AddressStreet","AddressCity","AddressState","AddressZip","PhoneNum","Extension","HireDate","SalaryBonus","NotFound","App","react_router","exact","path","render","components_Overview","components_Projects","components_Teams","components_Employees","components_NotFound","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31d559fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass NavBar extends Component{\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-inverse navbar-fixed-top\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"navbar-header\">\r\n                        <a className=\"navbar-brand\" href=\"/\">{this.props.title}</a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\n\r\nclass SideBar extends Component{\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm-3 col-md-2  sidebar\">\r\n              <ul className=\"nav nav-sidebar\">\r\n                <li className={(this.props.highlight === \"Overview\" ? 'active':'')}><a href=\"/\">Overview <span className=\"sr-only\">(current)</span></a></li>\r\n              </ul>\r\n              <ul className=\"nav nav-sidebar\">\r\n                <li className={(this.props.highlight === \"Projects\" ? 'active':'')}><a href=\"/projects\">Projects</a></li>\r\n                <li className={(this.props.highlight === \"Teams\" ? 'active':'')}><a href=\"/teams\">Teams</a></li>\r\n                <li className={(this.props.highlight === \"Employees\" ? 'active':'')}><a href=\"/employees\">Employees</a></li>\r\n              </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, {Component} from 'react';\r\nimport NavBar from './NavBar';\r\nimport SideBar from './SideBar';\r\n\r\nclass MainContainer extends Component{\r\n    render() {\r\n        return(\r\n            <div>\r\n                <NavBar title={this.props.navbar}/>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <SideBar highlight={this.props.sidebar}/>\r\n                        <div className=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\r\n                            {this.props.children}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainContainer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nclass ProjectsPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(this.props.dataSource)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({projects : data});\r\n        }).catch(err => {\r\n            console.log(\"error\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const projects = this.state.projects;\r\n        \r\n        //get the Number value in the value of ProjectName of each team\r\n        function getProjNum(project){\r\n            let regex = /\\d+/g;\r\n            let found = project.ProjectName.match(regex).map(Number);\r\n            return found[0];\r\n        }\r\n\r\n        //a compare function for sorting the teams by the Number value in the ProjectName\r\n        function compare(a, b){\r\n            return getProjNum(a) - getProjNum(b);\r\n        }\r\n\r\n        //sort the projects\r\n        projects.sort(compare);\r\n\r\n        return (\r\n            <div className=\"panel panel-default\">\r\n                    <div className=\"panel-heading\">\r\n                      <h3 className=\"panel-title\">{this.props.title}</h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                      <div className=\"table-responsive overview-table\">\r\n                        <table className=\"table table-striped table-bordered\">\r\n                          <tbody>\r\n                            {projects.map((project) =>\r\n                                <tr key={project._id}>\r\n                                    <td>{project.ProjectName}</td>\r\n                                    <td>{'Active ' + moment().diff(moment(project.ProjectStartDate),'days') + ' days'}</td>\r\n                                </tr>)}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      <Link to=\"/projects\" className=\"btn btn-primary form-control\">View All Project Data</Link>\r\n                    </div>\r\n                  </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectsPanel;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass TeamsPanel extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            teams : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(this.props.dataSource)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({teams : data});\r\n        }).catch(err => {\r\n            console.log(\"error\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const teams = this.state.teams;\r\n\r\n        function getTeamNum(team){\r\n            let regex = /\\d+/g;\r\n            let found = team.TeamName.match(regex).map(Number);\r\n            return found[0];\r\n        }\r\n\r\n        function compare(a,b){\r\n            return getTeamNum(a) - getTeamNum(b);\r\n        }\r\n\r\n        teams.sort(compare);\r\n\r\n        return (\r\n            <div className=\"panel panel-default\">\r\n                    <div className=\"panel-heading\">\r\n                      <h3 className=\"panel-title\">{this.props.title}</h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                      <div className=\"table-responsive overview-table\">\r\n                        <table className=\"table table-striped table-bordered\">\r\n                          <tbody>\r\n                              {teams.map((team) => \r\n                                <tr key={team._id}>\r\n                                    <td>{team.TeamName}</td>\r\n                                    <td>{team.Employees.length + ' employees'}</td>\r\n                                </tr>)}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      <Link to=\"/teams\" className=\"btn btn-primary form-control\">View All Team Data</Link>\r\n                    </div>\r\n                  </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeamsPanel;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass EmployeesPanel extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            employees : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(this.props.dataSource)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({employees : data});\r\n        }).catch(err => {\r\n            console.log(\"error\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const employees = this.state.employees;\r\n\r\n        function compare(a,b){\r\n            if(a.FirstName < b.FirstName){\r\n                return -1;\r\n            }\r\n            if(a.FirstName > b.FirstName){\r\n                return 1;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        employees.sort(compare);\r\n\r\n        return(\r\n            <div className=\"panel panel-default\">\r\n                    <div className=\"panel-heading\">\r\n                      <h3 className=\"panel-title\">{this.props.title}</h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                      <div className=\"table-responsive overview-table\">\r\n                        <table className=\"table table-striped table-bordered\">\r\n                          <tbody>\r\n                            {employees.map((employee) => \r\n                                <tr key={employee._id}>\r\n                                    <td>{employee.FirstName + ' ' + employee.LastName}</td>\r\n                                    <td>{employee.Position.PositionName}</td>\r\n                                </tr>)}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      <Link to=\"/employees\" className=\"btn btn-primary form-control\">View All Employee Data</Link>\r\n                    </div>\r\n                  </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeesPanel;","import React, {Component} from 'react';\r\nimport MainContainer from './MainContainer';\r\nimport ProjectsPanel from './ProjectsPanel';\r\nimport TeamsPanel from './TeamsPanel';\r\nimport EmployeesPanel from './EmployeesPanel';\r\n\r\nclass Overview extends Component{\r\n    render() {\r\n        return(\r\n            <MainContainer navbar=\"WEB422 - Project Portal\" sidebar=\"Overview\">\r\n              <h1 className=\"page-header\">Overview</h1>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <ProjectsPanel title=\"Projects\" dataSource=\"https://mighty-wildwood-35586.herokuapp.com/projects\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <TeamsPanel title=\"Teams\" dataSource=\"https://mighty-wildwood-35586.herokuapp.com/teams\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <EmployeesPanel title=\"Employees\" dataSource=\"https://mighty-wildwood-35586.herokuapp.com/employees\" />\r\n                </div>\r\n              </div>\r\n        </MainContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Overview;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport MainContainer from './MainContainer';\r\n\r\nclass Projects extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            projects : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(this.props.dataSource)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({projects : data});\r\n        }).catch(err => {\r\n            console.log(\"error\");\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const projects = this.state.projects;\r\n        \r\n        //get the Number value in the value of ProjectName of each team\r\n        function getProjNum(project){\r\n            let regex = /\\d+/g;\r\n            let found = project.ProjectName.match(regex).map(Number);\r\n            return found[0];\r\n        }\r\n\r\n        //a compare function for sorting the teams by the Number value in the ProjectName\r\n        function compare(a, b){\r\n            return getProjNum(a) - getProjNum(b);\r\n        }\r\n\r\n        //sort the projects\r\n        projects.sort(compare);\r\n\r\n        return(\r\n            <MainContainer navbar=\"WEB422 - Project Portal\" sidebar=\"Projects\">\r\n                <h1 className=\"page-header\">Projects</h1>\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Start Date</th>\r\n                            <th>End Date</th>\r\n                        </tr>\r\n                        {projects.map((project) => \r\n                            <tr key={project._id}>\r\n                                <td>{project.ProjectName}</td>\r\n                                <td>{project.ProjectDescription}</td>\r\n                                <td>{project.ProjectStartDate ? moment(project.ProjectStartDate).format('LL') : 'n/a'}</td>\r\n                                <td>{project.ProjectEndDate ? moment(project.ProjectEndDate).format('LL') : 'n/a'}</td>\r\n                            </tr>)}\r\n                    </tbody>\r\n                </table>\r\n            </MainContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\nimport MainContainer from './MainContainer';\r\n\r\nclass Teams extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            teams : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(this.props.dataSource)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({teams : data});\r\n        }).catch(err => {\r\n            console.log(\"error\");\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const teams = this.state.teams;\r\n\r\n        function getTeamNum(team){\r\n            let regex = /\\d+/g;\r\n            let found = team.TeamName.match(regex).map(Number);\r\n            return found[0];\r\n        }\r\n\r\n        function compare(a,b){\r\n            return getTeamNum(a) - getTeamNum(b);\r\n        }\r\n\r\n        teams.sort(compare);\r\n\r\n        return(\r\n            <MainContainer navbar=\"WEB422 - Project Portal\" sidebar=\"Teams\">\r\n                <h1 className=\"page-header\">Teams</h1>\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Projects</th>\r\n                            <th>Employees</th>\r\n                            <th>Team Lead</th>\r\n                        </tr>\r\n                        {teams.map((team) => \r\n                            <tr key={team._id}>\r\n                                <td>{team.TeamName}</td>\r\n                                <td>\r\n                                    <ul>\r\n                                        {team.Projects.map((project) =>\r\n                                            <li key={project._id}>\r\n                                                {project.ProjectName}\r\n                                            </li>)}\r\n                                    </ul>\r\n                                </td>\r\n                                <td>{team.Employees.length + ' Employees'}</td>\r\n                                <td>{team.TeamLead.FirstName + ' ' + team.TeamLead.LastName}</td>\r\n                            </tr>)}\r\n                    </tbody>\r\n                </table>\r\n            </MainContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Teams;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport MainContainer from './MainContainer';\r\n\r\nclass Employees extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            employees : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(this.props.dataSource)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({employees : data});\r\n        }).catch(err => {\r\n            console.log(\"error\");\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const employees = this.state.employees;\r\n\r\n        function compare(a,b){\r\n            if(a.FirstName < b.FirstName){\r\n                return -1;\r\n            }\r\n            if(a.FirstName > b.FirstName){\r\n                return 1;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        employees.sort(compare);\r\n\r\n        return(\r\n            <MainContainer navbar=\"WEB422 - Project Portal\" sidebar=\"Employees\">\r\n                <h1 className=\"page-header\">Employees</h1>\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Name &amp; Position</th>\r\n                            <th>Address</th>\r\n                            <th>Phone Num</th>\r\n                            <th>Hire Date</th>\r\n                            <th>Salary Bonus</th>\r\n                        </tr>\r\n                        {employees.map((employee) => \r\n                            <tr key={employee._id}>\r\n                                <td>{employee.FirstName + ' ' + employee.LastName + ' - ' + employee.Position.PositionName}</td>\r\n                                <td>{employee.AddressStreet + ', ' + employee.AddressCity + ' ' + employee.AddressState + ', ' + employee.AddressZip}</td>\r\n                                <td>{employee.PhoneNum + ' ex: ' + employee.Extension}</td>\r\n                                <td>{moment(employee.HireDate).format('LL')}</td>\r\n                                <td>{'$ ' + employee.SalaryBonus}</td>\r\n                            </tr>)}\r\n                    </tbody>\r\n                </table>\r\n            </MainContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employees;","import React, { Component } from 'react';\r\nimport MainContainer from './MainContainer';\r\n\r\nclass NotFound extends Component{\r\n    render(){\r\n        return(\r\n            <MainContainer navbar=\"WEB422 - Project Portal\">\r\n                <h1 className=\"page-header\">Not Found</h1>\r\n                <span>Page Not Found</span>\r\n            </MainContainer> \r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound;","/*********************************************************************************\n* WEB422 – Assignment 04\n* I declare that this assignment is my own work in accordance with Seneca Academic Policy. No part\nof this\n* assignment has been copied manually or electronically from any other source (including web sites)\nor\n* distributed to other students.\n*\n* Name: Tian Zheng     Student ID: 155394174     Date: June 24, 2019\n*\n********************************************************************************/\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Overview from './components/Overview';\nimport Projects from './components/Projects';\nimport Teams from './components/Teams';\nimport Employees from './components/Employees';\nimport NotFound from './components/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' render={() => (\n          <Overview />\n        )} />\n\n        <Route exact path='/projects' render={() => (\n          <Projects dataSource=\"https://mighty-wildwood-35586.herokuapp.com/projects\"/>\n        )} />\n\n        <Route exact path='/teams' render={() => (\n          <Teams dataSource=\"https://mighty-wildwood-35586.herokuapp.com/teams\"/>\n        )} />\n\n        <Route exact path='/employees' render={() => (\n          <Employees dataSource=\"https://mighty-wildwood-35586.herokuapp.com/employees\"/>\n        )} />\n\n        <Route render={() => (\n          <NotFound />\n        )} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}